To do:

* Better error reporting
* Factor out useful subroutines from the existing bib styles; the
  custom-bib system (merlin.mbs) may serve as a good datapoint.
* Add a test suite, consisting of database files and BibTeX style files,
  for testing the correctness of cl-bibtex

In the compiler:

* macros
* most variables are in fact lexical variables (some, in fact, only
  store arguments for later use).  Keep track whether a variable is
  accessed before it is assigned in any function; if not, we can make
  it lexical in *all* functions.  This requires a second compiler pass.
* maybe name formal arguments "STRING1", "INT1", ..., depending on type?
* don't name the temporary variables occuring in while$ "ARGnn"
* propagate types when they get more specific:
  { $duplicate + } is of type (INTEGER) -> (INTEGER), not T -> (INTEGER)
* be more strict when checking the type of a popped form
* Try to compile the whole custom-bib system (merlin.mbs)?

